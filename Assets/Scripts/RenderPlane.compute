// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct height
{
    float height;
    uint details;
    float pressure;
    float temperature;
    float humitidy;
};

RWTexture2D<float4> result;

RWStructuredBuffer<float> heights;

RWStructuredBuffer<int> countryIds;
RWStructuredBuffer<float3> countryColours;

int mapMode; // How to display the map

float resolution; // resolution of heights
int2 screenResolution; // resolution of the screen
float deepestPoint; // Deepest point in sea
float highestPoint; // Highest point on land
float lowestPoint; // Lowest point on land

float2 cameraPosition; // -1 to 1 on x and y
float zoom;

[numthreads(1,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float2 uv = (id.xy / (float2)screenResolution) * 2 - 1;
    uv *= zoom;
    uv += cameraPosition;

    if (uv.x > 1) {
        uv.x = -1 + (uv.x - 1);
    }
    if (uv.x < -1) {
        uv.x = 1 + (uv.x + 1);
    }
    if (uv.y > 1 || uv.y < -1) {
        result[id.xy] = float4(0.0, 0.0, 0.0, 1.0);
        return;
    }

    int2 coord = int2((uv.x + 1) / 2 * resolution * 2, (uv.y + 1) / 2 * resolution);

    float height = heights[coord.x * resolution + coord.y];

    float3 terrainColour;
    if (height < 0) // Is ocean
    {
        terrainColour = float3(0.0, 0.0, (1 - (height / deepestPoint)));
    }
    else if (height == 0)
    {
        // Debug
        terrainColour = float3(0.0, 0.0, 0.0);
    }
    else
    {
        terrainColour = float3(0.0, sqrt(height / highestPoint) * 0.8 + 0.2, 0.0);
    }

    switch(mapMode)
    {
        case 0: // Terrain
            result[id.xy] = float4(terrainColour, 1.0);
            break;

        case 1: // Ocean
            if (height < 0)
            {
                result[id.xy] = float4(1.0, 0.0, 0.0, 1.0);
            }
            else
            {
                result[id.xy] = float4(0.0, 0.0, 0.0, 1.0);
            }
            break;

        case 2: // Country
            int countryID = countryIds[coord.x * resolution + coord.y];
            if (countryID == 0)
            {
                result[id.xy] = float4(terrainColour, 1.0);
                return;
            }

            float3 countryColour = countryColours[countryID];

            result[id.xy] = float4(0.5 * countryColour + 0.5 * terrainColour, 1.0);
            break;
    }
}
